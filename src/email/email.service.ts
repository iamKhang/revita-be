import { Injectable, Logger } from '@nestjs/common';
import { Resend } from 'resend';

@Injectable()
export class EmailService {
  private readonly logger = new Logger(EmailService.name);
  private resend: Resend;

  constructor() {
    this.resend = new Resend(process.env.RESEND_API_KEY);
  }

  /**
   * G·ª≠i OTP qua email
   * @param email - ƒê·ªãa ch·ªâ email ng∆∞·ªùi nh·∫≠n
   * @param otp - M√£ OTP
   * @param name - T√™n ng∆∞·ªùi nh·∫≠n (t√πy ch·ªçn)
   */
  async sendOtp(email: string, otp: string, name?: string): Promise<boolean> {
    try {
      const { data, error } = await this.resend.emails.send({
        from: 'Revita Healthcare <noreply@revita.io.vn>',
        to: [email],
        subject: 'M√£ x√°c th·ª±c OTP - Revita Healthcare',
        html: this.generateOtpEmailTemplate(otp, name),
      });

      if (error) {
        this.logger.error('Failed to send OTP email:', error);
        return false;
      }

      this.logger.log(`OTP email sent successfully to ${email}. Message ID: ${data?.id}`);
      
      // Log OTP to console for development
      if (process.env.NODE_ENV === 'development') {
        console.log(`üîê OTP cho email ${email}: ${otp}`);
      }
      
      return true;
    } catch (error) {
      this.logger.error('Error sending OTP email:', error);
      return false;
    }
  }

  /**
   * G·ª≠i email ch√†o m·ª´ng sau khi ƒëƒÉng k√Ω th√†nh c√¥ng
   * @param email - ƒê·ªãa ch·ªâ email
   * @param name - T√™n ng∆∞·ªùi d√πng
   */
  async sendWelcomeEmail(email: string, name: string): Promise<boolean> {
    try {
      const { data, error } = await this.resend.emails.send({
        from: 'Revita Healthcare <noreply@revita.io.vn>',
        to: [email],
        subject: 'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Revita Healthcare!',
        html: this.generateWelcomeEmailTemplate(name),
      });

      if (error) {
        this.logger.error('Failed to send welcome email:', error);
        return false;
      }

      this.logger.log(`Welcome email sent successfully to ${email}. Message ID: ${data?.id}`);
      return true;
    } catch (error) {
      this.logger.error('Error sending welcome email:', error);
      return false;
    }
  }

  /**
   * T·∫°o template HTML cho email OTP
   * @param otp - M√£ OTP
   * @param name - T√™n ng∆∞·ªùi nh·∫≠n
   */
  private generateOtpEmailTemplate(otp: string, name?: string): string {
    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>M√£ x√°c th·ª±c OTP</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 28px;
            font-weight: bold;
            color: #2c5aa0;
            margin-bottom: 10px;
          }
          .otp-code {
            background: #f8f9fa;
            border: 2px dashed #2c5aa0;
            padding: 20px;
            text-align: center;
            margin: 20px 0;
            border-radius: 8px;
          }
          .otp-number {
            font-size: 32px;
            font-weight: bold;
            color: #2c5aa0;
            letter-spacing: 5px;
            margin: 10px 0;
          }
          .warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
          }
          .footer {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #666;
            font-size: 14px;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üè• Revita Healthcare</div>
            <h2>M√£ x√°c th·ª±c OTP</h2>
          </div>
          
          <p>Xin ch√†o${name ? ` ${name}` : ''},</p>
          
          <p>B·∫°n ƒë√£ y√™u c·∫ßu m√£ x√°c th·ª±c ƒë·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i Revita Healthcare.</p>
          
          <div class="otp-code">
            <p><strong>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</strong></p>
            <div class="otp-number">${otp}</div>
            <p><em>M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</em></p>
          </div>
          
          <div class="warning">
            <strong>‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t:</strong>
            <ul>
              <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
              <li>Revita Healthcare s·∫Ω kh√¥ng bao gi·ªù y√™u c·∫ßu m√£ OTP qua ƒëi·ªán tho·∫°i</li>
              <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email</li>
            </ul>
          </div>
          
          <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:</p>
          <ul>
            <li>üìß Email: support@revita.io.vn</li>
            <li>üìû Hotline: 1900-xxxx</li>
          </ul>
          
          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© Revita Healthcare</strong></p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  /**
   * T·∫°o template HTML cho email ch√†o m·ª´ng
   * @param name - T√™n ng∆∞·ªùi d√πng
   */
  private generateWelcomeEmailTemplate(name: string): string {
    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Revita Healthcare</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 28px;
            font-weight: bold;
            color: #2c5aa0;
            margin-bottom: 10px;
          }
          .welcome-box {
            background: linear-gradient(135deg, #2c5aa0, #4a90e2);
            color: white;
            padding: 25px;
            text-align: center;
            border-radius: 8px;
            margin: 20px 0;
          }
          .footer {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #666;
            font-size: 14px;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üè• Revita Healthcare</div>
          </div>
          
          <div class="welcome-box">
            <h2>üéâ Ch√†o m·ª´ng ${name}!</h2>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i Revita Healthcare</p>
          </div>
          
          <p>Ch√∫ng t√¥i r·∫•t vui m·ª´ng ch√†o ƒë√≥n b·∫°n tham gia c·ªông ƒë·ªìng chƒÉm s√≥c s·ª©c kh·ªèe c·ªßa Revita Healthcare!</p>
          
          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© Revita Healthcare</strong></p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }
}
